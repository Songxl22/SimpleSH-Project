<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <!-- 启动项目时扫描所有的注解 -->
    <!-- 扫描业务组件,让spring不扫描带有@Service注解的类(留在spring-common.xml中扫描@Service注解的类),防止事务失效 -->
    <context:component-scan base-package="com.codingyun.core">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
    </context:component-scan>

    <!--  主要作用于@Controller，激活该模式

    	下面是一种简写形式，完全可以手动配置替代这种简写形式；
    	 它会自动注册DefaultAnnotationHandlerMapping与AnnotationMethodHandlerAdapter 两个bean,
    	   是spring MVC为@Controllers分发请求所必须的
     -->
    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg value="UTF-8" />
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!-- 这里拦截器还有一种配置方法【针对路径进行配置】 推荐使用这个，方便直观-->
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/system/*/*"/>
            <mvc:mapping path="/system/*"/>
            <mvc:mapping path="/system/"/>
            <mvc:mapping path="/system"/>
            <bean class="com.codingyun.core.interceptor.SysAdminInterceptor"></bean>
        </mvc:interceptor>
    </mvc:interceptors>


    <!-- 配置js，css等静态文件直接映射到对应的文件夹，不被DispatcherServlet处理 -->
    <!--<mvc:resources mapping="/resources" location="/WEB-INF/resources/**"/>
    <mvc:resources mapping="/javascript/**" location="/static_resources/javascript/"/>
    <mvc:resources mapping="/styles/**" location="/static/css/"/>
    <mvc:resources mapping="/images/**" location="/static/images/"/>-->

    <!-- 走servlet的默认配置，先走默认的web.xml配置的servlet，没有的话才找对应controller -->
    <mvc:default-servlet-handler />

    <!-- jsp页面解析器，当Controller返回XXX字符串时，先通过拦截器，然后该类就会在jsp/目录下，查找XXX.jsp文件-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/pages/"></property>
        <property name="suffix" value=".jsp"></property>
    </bean>

    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding">
            <value>UTF-8</value>
        </property>
        <property name="maxUploadSize">
            <value>32505856</value><!-- 上传文件大小限制为31M，31*1024*1024 -->
        </property>
        <property name="maxInMemorySize">
            <value>4096</value>
        </property>
    </bean>
</beans>